"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DownloadService = void 0;
var os = __importStar(require("os"));
var path_1 = __importDefault(require("path"));
var node_downloader_helper_1 = require("node-downloader-helper");
var fs_extra_1 = __importDefault(require("fs-extra"));
var extract_zip_1 = __importDefault(require("extract-zip"));
var cli_progress_1 = __importDefault(require("cli-progress"));
var DownloadService = /** @class */ (function () {
    function DownloadService() {
    }
    DownloadService.osArch = function () {
        switch (os.arch()) {
            case 'arm':
                return 'arm';
            case 'arm64':
                return 'arm64';
            case 'ia32':
            case 'x32':
                return '386';
            case 'x64':
                return 'amd64';
            default:
                return '';
        }
    };
    DownloadService.os = function () {
        switch (os.platform()) {
            case "darwin":
                return 'darwin';
            case "linux":
            case "openbsd":
                return "linux";
            case "freebsd":
                return "freebsd";
            case "win32":
                return 'windows';
            default:
                return '';
        }
    };
    DownloadService.unzipFile = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, (0, extract_zip_1.default)(path_1.default.join(options.directory, options.filename), {
                                dir: path_1.default.join(process.cwd(), options.directory),
                                onEntry: function (entry, zipFile) {
                                    entry.fileName = options.execFileName;
                                }
                            })];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        e_1 = _a.sent();
                        console.log(e_1);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    DownloadService.download = function () {
        return __awaiter(this, void 0, void 0, function () {
            var arch, platform, options, bar, dl;
            var _this = this;
            return __generator(this, function (_a) {
                arch = this.osArch();
                platform = this.os();
                if (!arch || !platform) {
                    throw new Error("".concat(os.platform(), "-").concat(os.arch(), " is not supported"));
                }
                options = {
                    directory: 'bin',
                    execFileName: os.platform() === 'win32' ? 'loclx.exe' : 'loclx',
                    filename: "loclx-".concat(platform, "-").concat(arch, ".zip") // filename to be downloaded
                };
                bar = new cli_progress_1.default.SingleBar({}, cli_progress_1.default.Presets.shades_classic);
                if (fs_extra_1.default.existsSync(path_1.default.join(options.directory, options.execFileName)) && !process.env.REFRESH) {
                    return [2 /*return*/, true];
                }
                // if directory not exists then create one
                fs_extra_1.default.ensureDirSync(options.directory);
                fs_extra_1.default.emptyDirSync(options.directory);
                dl = new node_downloader_helper_1.DownloaderHelper("https://api.localxpose.io/api/downloads/".concat(options.filename), options.directory, {
                    retry: { maxRetries: 3, delay: 2000 }
                });
                dl.on('start', function () {
                    console.log('Start Downloading LocalXpose binary...');
                    bar.start(100, 0);
                });
                dl.on('error', function (err) { return console.error('❎ Failed to download LocalXpose binary:', err); });
                dl.on('end', function () {
                    bar.stop();
                    console.log('✅ LocalXpose binary downloaded successfully.');
                    _this.unzipFile(options);
                });
                dl.on('progress', function (stats) { return bar.update(stats.progress); });
                dl.on('stateChanged', function (state) {
                    switch (state) {
                        case node_downloader_helper_1.DH_STATES.PAUSED:
                        case node_downloader_helper_1.DH_STATES.STOPPED:
                        case node_downloader_helper_1.DH_STATES.FAILED:
                            bar.stop();
                            break;
                    }
                });
                return [2 /*return*/, dl.start()];
            });
        });
    };
    return DownloadService;
}());
exports.DownloadService = DownloadService;
//# sourceMappingURL=index.js.map